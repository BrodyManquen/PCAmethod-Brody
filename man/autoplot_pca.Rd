% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoplot_pca.R
\name{autoplot_pca}
\alias{autoplot_pca}
\title{Automatic ggplot for a Principal Component Analysis. Extract information from an object returned by a function performing Principal Component Analysis and produce a plot of observations, of variables, or a biplot.}
\arguments{
\item{object}{an object returned by a function performing Principal Component Analysis.}

\item{mapping}{a call to aes() specifying additional mappings between variables and plot aesthetics. By default, positions \code{x} and \code{y} are mapped to the scores on the principal components.}

\item{which}{the plot to produce: either plot "rows", "lines", "observations", "objects", "individuals", "sites" (which are all treated as synonyms), or plot "columns", "variables", "descriptors", "species" (which are, again, synonyms), or produce a "biplot". All can be abbreviated. By default, observations are plotted.}

\item{n.max.labels}{maximum number of observation labels to plot. Let \code{n} be the number of data rows. For \code{0 < n < n.max.labels/2}, labels are plotted and shifted to avoid over-plotting. For \code{n.max.labels/2 < n < n.max.labels}, labels are plotted but not disambiguated. For \code{n.max.labels < n} labels are not plotted.}

\item{...}{passed to the various geoms; can be used to \emph{set} further aesthetics.}
}
\value{
A ggplot2 object defining the plot.
}
\description{
Automatic ggplot for a Principal Component Analysis. Extract information from an object returned by a function performing Principal Component Analysis and produce a plot of observations, of variables, or a biplot.
}
\details{
The object is passed to the appropriate \code{augment} method, defined in \code{\link{pca_tidiers}}, which extracts the scores, possibly the original data, and other relevant information from the PCA object. The resulting \code{data.frame} is plotted with:
\describe{
  \item{\code{\link[ggplot2]{geom_point}}:}{for observations points,}
  \item{\code{\link[ggplot2]{geom_text}} or \code{\link[ggrepel]{geom_text_repel}}:}{for observations labels,}
  \item{\code{\link[ggplot2]{geom_segment}}:}{for variables vectors.}
}
}
\examples{
pca <- prcomp(USArrests, scale=TRUE)
autoplot(pca)
autoplot(pca, which="variables")
autoplot(pca, which="biplot") # defaults to scaling=3
autoplot(pca, which="biplot", scaling=1)
autoplot(pca, which="biplot", scaling=2, n.max.labels=0)

# add further aesthetic mappings
names(augment(pca, data=USArrests))
autoplot(pca, data=USArrests, mapping=aes(alpha=.cos2))
autoplot(pca, data=USArrests, mapping=aes(alpha=.cos2, size=.contrib))
# including from the original data
autoplot(pca, data=USArrests, mapping=aes(alpha=.cos2, color=Murder))

# aesthetics can also be set
autoplot(pca, mapping=aes(alpha=.cos2), color="darkblue", size=3)

if (require("FactoMineR")) {
  pca <- FactoMineR::PCA(USArrests, graph=FALSE)
  autoplot(pca)
  autoplot(pca, which="variables")
  # with FactoMineR, the data is present by default and can be mapped
  names(augment(pca))
  autoplot(pca, mapping=aes(alpha=.cos2, color=Murder))
}

if (require("vegan")) {
  pca <- vegan::rda(USArrests, scale=TRUE)
  plot(pca)
  autoplot(pca, which="biplot", scaling=2)
  autoplot(pca)
}

if (require("ade4")) {
  pca <- ade4::dudi.pca(USArrests, nf=4, scannf=FALSE)
  biplot(pca)
  autoplot(pca, which="biplot", scaling=1)
}

if (require("pcaMethods")) {
  pca <- pcaMethods::pca(USArrests, scale="uv", nPcs=4)
  biplot(pca)
  autoplot(pca, which="biplot")
}

}
